@using DogCarePlatform.Common
@using DogCarePlatform.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul style="padding: 0px 20px;" id="nav-mobile" class="right hide-on-med-and-down">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li>
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="material-icons left">settings</i>Здравейте @this.User.Identity.Name!</a>
        </li>
        if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
            <li>
                <a asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Admin">Админ</a>
            </li>
        }
        <li>
            <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new { area = string.Empty }))">
                <button type="submit" class="#f44336 red waves-effect btn teal-text">Изход</button>
            </form>
        </li>

        if (this.User.IsInRole(GlobalConstants.DogsitterRoleName))
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null)
            {
                if (user.Dogsitter != null)
                {
                    var dogsitter = user.Dogsitter;

                    if (dogsitter.Notifications.Any())
                    {
                        <ul id="slide-out" class="sidenav">
                            <ul class="collapsible">
                                <partial name="_DogsitterNotificationsPartial" for="@dogsitter.Notifications">
                            </ul>
                        </ul>

                        <li>
                            <a data-target="slide-out" class="sidenav-trigger show-on-large">
                                Известия
                                @if (dogsitter.Notifications.Count(n => n.SentBy == "Owner") == 0)
                                {
                                    <span class="new badge" data-badge-caption="няма"></span>
                                }
                                else if (dogsitter.Notifications.Count(n => n.SentBy == "Owner") == 1)
                                {
                                    <span class="new badge" data-badge-caption="ново">@dogsitter.Notifications.Count(n => n.SentBy == "Owner")</span>
                                }
                                else if (dogsitter.Notifications.Count(n => n.SentBy == "Owner") > 1)
                                {
                                    <span class="new badge" data-badge-caption="нови">@dogsitter.Notifications.Count(n => n.SentBy == "Owner")</span>
                                }
                            </a>
                        </li>
                    }
                    else
                    {
                        <li>
                            <a>
                                Известия
                                <span class="new badge" data-badge-caption="няма"></span>
                            </a>
                        </li>
                    }
                }
            }
        }
        else if (this.User.IsInRole(GlobalConstants.OwnerRoleName))
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null)
            {
                if (user.Owner != null)
                {
                    var owner = user.Owner;

                    if (owner.Notifications.Any())
                    {
                        <ul id="slide-out" class="sidenav">
                            <ul class="collapsible">
                                <partial name="_OwnerNotificationsPartial" for="@owner.Notifications">
                            </ul>
                        </ul>

                        <li>
                            <a data-target="slide-out" class="sidenav-trigger show-on-large">
                                Известия
                                @if (owner.Notifications.Count(n => n.SentBy == "Dogsitter") == 0)
                                {
                                    <span class="new badge" data-badge-caption="няма"></span>
                                }
                                else if (owner.Notifications.Count(n => n.SentBy == "Dogsitter") == 1)
                                {
                                    <span class="new badge" data-badge-caption="ново">@owner.Notifications.Count(n => n.SentBy == "Dogsitter")</span>
                                }
                                else if (owner.Notifications.Count(n => n.SentBy == "Dogsitter") > 1)
                                {
                                    <span class="new badge" data-badge-caption="нови">@owner.Notifications.Count(n => n.SentBy == "Dogsitter")</span>
                                }
                            </a>
                        </li>
                    }
                    else
                    {
                        <li>
                            <a>
                                Известия
                                <span class="new badge" data-badge-caption="няма"></span>
                            </a>
                        </li>
                    }
                }
            }
        }
    }
    else
    {
        <li>Влез като</li>
        <li class="nav-item">
            <a class="#ef9a9a red lighten-3 waves-effect btn white-text" asp-area="Identity" asp-page="/Account/LoginOwner">Собственик</a>
        </li>
        <li class="nav-item">
            <a class="#ef9a9a red lighten-3 waves-effect btn white-text" asp-area="Identity" asp-page="/Account/LoginDogsitter">Кучегледачка</a>
        </li>
    }
</ul>
