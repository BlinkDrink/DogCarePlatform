@using DogCarePlatform.Common
@using DogCarePlatform.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul style="padding: 0px 60px;" id="nav-mobile" class="right hide-on-med-and-down">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li>
            <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Здравейте @this.User.Identity.Name!</a>
        </li>
        if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
        {
            <li>
                <a asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Admin">Админ</a>
            </li>
        }
        <li>
            <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new { area = string.Empty }))">
                <button type="submit" class="#ffe57f amber accent-1 waves-effect btn teal-text">Изход</button>
            </form>
        </li>

        @if (this.User.IsInRole(GlobalConstants.DogsitterRoleName))
        {
            var user = await UserManager.GetUserAsync(User);
            var dogsitter = user.Dogsitters.FirstOrDefault();

            <li>
                <a class="dropdown-trigger" href="#!" data-activates="notification" data-target='dropdown1'>
                    <i class="material-icons white-text notif">notifications</i><small class="notification-badge">@dogsitter.Notifications.Count(n => n.Content.StartsWith("Получихте"))</small>
                </a>
            </li>

            <ul id='dropdown1' class='dropdown-content'>
                @foreach (var notification in dogsitter.Notifications)
                {
                    if (notification.Content.StartsWith("Получихте"))
                    {
                        <li>
                            <a asp-controller="Appointment" asp-action="GetAppointmentFromNotification" asp-route-id="@notification.Id">
                                @Html.Raw(notification.Content)
                            </a>
                        </li>
                        <li class="divider" tabindex="1"></li>
                    }
                }
            </ul>
        }
        else if (this.User.IsInRole(GlobalConstants.OwnerRoleName))
        {
            var user = await UserManager.GetUserAsync(User);
            var owner = user.Owners.FirstOrDefault();

            <li>
                <a class="dropdown-trigger" href="#!" data-activates="notification" data-target='dropdown1'>
                    <i class="material-icons white-text notif">notifications</i><small class="notification-badge"></small>
                </a>
            <li id="noti_Container">
                <div id="noti_Counter"></div>
                <!--SHOW NOTIFICATIONS COUNT.-->
                @owner.Notifications.Count(n => n.Content.StartsWith("Заявката ви"))
                <!--A CIRCLE LIKE BUTTON TO DISPLAY NOTIFICATION DROPDOWN.-->
                <div id="noti_Button"></div>

                <!--THE NOTIFICAIONS DROPDOWN BOX.-->
                <div id="notifications">
                    <h3>Notifications</h3>
                    <div style="height: 300px;"></div>
                    <div class="seeAll"><a href="#">See All</a></div>
                </div>
            </li>
            </li>



            <ul id='dropdown1' class='dropdown-content'>
                @foreach (var notification in owner.Notifications)
                {
                    if (notification.Content.StartsWith("Заявката ви"))
                    {
                        <li>
                            <a asp-controller="Appointment" asp-action="GetAppointmentFromNotification" asp-route-id="@notification.Id">
                                @Html.Raw(notification.Content)
                            </a>
                        </li>
                        <li class="divider" tabindex="1"></li>
                    }
                }
            </ul>

            <div class="notification-panel" id="notifications" style="top: 47px; right: 313.5px; max-width: 1349.5px; display: block;">
                <ul>
                </ul>
            </div>
        }
    }
    else
    {
        <li>Влез като</li>
        <li class="nav-item">
            <a class="#ffe082 amber lighten-3 waves-effect btn teal-text" asp-area="Identity" asp-page="/Account/LoginOwner">Собственик</a>
        </li>
        <li class="nav-item">
            <a class="#ffe082 amber lighten-3 waves-effect btn teal-text" asp-area="Identity" asp-page="/Account/LoginDogsitter">Кучегледачка</a>
        </li>
    }
</ul>

@section Scripts{
    <script>
        var notificationConnection;
        openConnection();

        function openConnection() {
            notificationConnection = new signalR.HubConnection("/notificationHub");
            notificationConnection
                .start()
                .catch(() => {
                    alert("Error while establishing connection");
                });
        }

        notificationConnection.on("sendNotification", (owner) => {
            $("#notifications").html("ADDED by <b>" + owner + "</b>");
            $("#friends-container").load("/friend/list").css("background", "#ffa");;
            window.setTimeout(function () {
                $("#notifications").html("NOTIFICATIONS");
                $("#friends-container").css("background", "");
            },
                10000);
        });

        friendConnection.on("removed", (user) => {
            $("#notifications").html("REMOVED by <b>" + user + "</b>");
            $("#friends-container").load("/friend/list").css("background", "#ffa");
            window.setTimeout(function () {
                $("#notifications").html("NOTIFICATIONS");
                $("#friends-container").css("background", "");
            },
                10000);
        });
    </script>

    <script>
        $(document).ready(function () {
            // ANIMATEDLY DISPLAY THE NOTIFICATION COUNTER.
            $("#noti_Counter")
                .css({ opacity: 0 })                
                .css({ top: "-10px" })
                .animate({ top: "-2px", opacity: 1 }, 500);

            $("#noti_Button").click(function () {
                // TOGGLE (SHOW OR HIDE) NOTIFICATION WINDOW.
                $("#notifications").fadeToggle("fast", "linear", function () {
                    if ($("#notifications").is(":hidden")) {
                        $("#noti_Button").css("background-color", "#2E467C");
                    }
                    // CHANGE BACKGROUND COLOR OF THE BUTTON.
                    else $("#noti_Button").css("background-color", "#FFF");
                });

                $("#noti_Counter").fadeOut("slow"); // HIDE THE COUNTER.

                return false;
            });

            // HIDE NOTIFICATIONS WHEN CLICKED ANYWHERE ON THE PAGE.
            $(document).click(function () {
                $("#notifications").hide();

                // CHECK IF NOTIFICATION COUNTER IS HIDDEN.
                if ($("#noti_Counter").is(":hidden")) {
                    // CHANGE BACKGROUND COLOR OF THE BUTTON.
                    $("#noti_Button").css("background-color", "#2E467C");
                }
            });

            $("#notifications").click(function () {
                return false; // DO NOTHING WHEN CONTAINER IS CLICKED.
            });
        });
    </script>
}
